// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface AllFixtures {
  result: Result[];
}

export interface Result {
  id:         number;
  status:     Status;
  startTime:  number;
  updateTime: number;
  homeTeam:   Detail;
  awayTeam:   Detail;
  country:    Detail;
  tournament: Detail;
  season:     Detail;
  events:     Event[];
  odds:       Odd[];
  duration?:  Duration;
  homeScore?: Score;
  awayScore?: Score;
  xg?:        Xg;
}

export interface ResultReduced {
  id:         number;
  startTime:  number;
  homeTeam:   Detail;
  awayTeam:   Detail;
  homeScore?: Score;
  awayScore?: Score;
  xg?:        Xg;
}

export interface Score {
  final:     number;
  firstHalf: number;
}

export interface Detail {
  id:   number;
  name: string;
}

export interface Duration {
  total:      number;
  firstHalf:  number;
  secondHalf: number;
}

export interface Event {
  homeScore:         number;
  awayScore:         number;
  minute:            number;
  author:            Detail;
  teamId:            number;
  type:              EventType;
  xg:                number | null;
  additionalMinute?: number;
}

export enum EventType {
  Block = "block",
  Goal = "goal",
  Miss = "miss",
  OwnGoal = "own-goal",
  PenaltyGoal = "penalty-goal",
  PenaltyMiss = "penalty-miss",
  RedCard = "red-card",
  Save = "save",
}

export interface Odd {
  type: OddType;
  open: number;
  last: number;
}

export enum OddType {
  Away = "away",
  Draw = "draw",
  Home = "home",
  TotalOver25 = "totalOver25",
  TotalUnder25 = "totalUnder25",
}

export enum Status {
  Finished = "finished",
  Moved = "moved",
  Preview = "preview",
}

export interface Xg {
  home: number;
  away: number;
}
